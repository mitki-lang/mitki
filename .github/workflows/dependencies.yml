name: Weekly cargo update
on:
  schedule:
    - cron: '0 0 * * Sun'
  workflow_dispatch:
permissions:
  contents: read
defaults:
  run:
    shell: bash
env:
  PR_TITLE: Weekly `cargo update`
  PR_MESSAGE: |
    Automation to keep dependencies in `Cargo.lock` current.

    The following is the output from `cargo update`:
  COMMIT_MESSAGE: "cargo update \n\n"

jobs:
  update:
    name: update dependencies
    runs-on: ubuntu-latest
    env:
      RUST_CHANNEL: nightly
    steps:
      - name: checkout the source code
        uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Install Rust toolchain
        run: |
          rustup update --no-self-update ${{ env.RUST_CHANNEL }}
          rustup default ${{ env.RUST_CHANNEL }}
      - name: cargo update
        run: cargo update 2>&1 | sed '/crates.io index/d' | tee -a cargo_update.log
      - name: upload Cargo.lock artifact for use in PR
        uses: actions/upload-artifact@v4
        with:
          name: Cargo-lock
          path: Cargo.lock
          retention-days: 1
      - name: upload cargo-update log artifact for use in PR
        uses: actions/upload-artifact@v4
        with:
          name: cargo-updates
          path: cargo_update.log
          retention-days: 1

  pr:
    name: amend PR
    needs: update
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: checkout the source code
        uses: actions/checkout@v4

      - name: download Cargo.lock from update job
        uses: actions/download-artifact@v4
        with:
          name: Cargo-lock
      - name: download cargo-update log from update job
        uses: actions/download-artifact@v4
        with:
          name: cargo-updates

      - name: craft PR body and commit message
        run: |
          echo "${COMMIT_MESSAGE}" > commit.txt
          cat cargo_update.log >> commit.txt

          echo "${PR_MESSAGE}" > body.md
          echo '```txt' >> body.md
          cat cargo_update.log >> body.md
          echo '```' >> body.md

      - name: commit
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git switch --force-create cargo_update
          git add ./Cargo.lock
          git commit --no-verify --file=commit.txt

      - name: push
        run: git push --no-verify --force --set-upstream origin cargo_update

      - name: edit existing open pull request
        id: edit
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          STATE=$(gh pr view cargo_update --repo $GITHUB_REPOSITORY --json state --jq '.state')
          if [[ "$STATE" != "OPEN" ]]; then
            exit 1
          fi

          gh pr edit cargo_update --title "${PR_TITLE}" --body-file body.md --repo $GITHUB_REPOSITORY

      - name: open new pull request
        if: steps.edit.outcome != 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh pr create --title "${PR_TITLE}" --body-file body.md --repo $GITHUB_REPOSITORY
